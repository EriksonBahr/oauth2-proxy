name: CI

on:
  push:
    branches:
      - 'refator-pipeline'
      # - $default-branch
    paths-ignore:
    - 'VERSION'
    - '.bumpversion.cfg'
  workflow_dispatch:

jobs:
  Init:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
         token: ${{ secrets.ADMIN_TOKEN }}

      - name: Extract branch name
        uses: vazco/github-actions-branch-name@v1
        id: branch

      - name: Bump version
        run: |
          bumpversion patch
          new_version=`cat VERSION`
          echo "New version is: $new_version"

          git config --global user.name "CI Build"
          git config --global user.email "ci.build@philips.com"
          git commit -am "Bump version $new_version"
          git push --force

  unit-test:
    env:
      COVER: true
    runs-on: ubuntu-20.04
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
      id: go

    - name: Get dependencies
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.36.0
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter

    - name: Verify Code Generation
      run: |
        make verify-generate

    - name: Lint
      run: |
        make lint

    - name: Build
      run: |
        make build

    - name: Test
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      run: |
        ./.github/workflows/test.sh

  docker:
    runs-on: ubuntu-20.04
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Docker Build
      run: |
        make docker
        
    - name: Docker login
      run: |
          docker login --username '${{ secrets.DOCKER_USER }}' --password '${{ secrets.DOCKER_PSWD }}'  '${{ secrets.DOCKER_REPO }}' 
        
    - name: Docker tag & Push
      run: |
          docker tag  '${{ secrets.DOCKER_REPO }}'/oauth2-proxy:latest '${{ secrets.DOCKER_REPO }}'/edi-foundation-oauth2-proxy:${{ github.sha }}
          docker tag  '${{ secrets.DOCKER_REPO }}'/oauth2-proxy:latest '${{ secrets.DOCKER_REPO }}'/edi-foundation-oauth2-proxy:latest
          docker push '${{ secrets.DOCKER_REPO }}'/edi-foundation-oauth2-proxy:${{ github.sha }}
          docker push '${{ secrets.DOCKER_REPO }}'/edi-foundation-oauth2-proxy:latest